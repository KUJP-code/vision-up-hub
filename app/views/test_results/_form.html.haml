-# locals: (result:, student:, test:)

:ruby
  id = form = "student#{student.id}_form"
  possible_levels = TestResult.new_levels.keys.reject { |l| l == 'all_levels' }
  lvl_options = possible_levels.map { |k| [k.titleize, k] }
  rec_lvl = result.new_level || student.level
- row_class = result.persisted? ? 'form-done' : ''
%tr{ class: row_class,
      data: { controller: 'test-result',
            'test-result-thresholds-value': test.thresholds.to_json,
            'test-result-questions-value': test.questions.to_json,
            'test-result-basics-value': test.basics },
    id: "student#{student.id}_result" }
  = turbo_frame_tag dom_id(result) do
    %td.p-2.whitespace-nowrap
      = link_to redact(student, student.en_name.presence || student.name),
                student_path(student)
    %td.p-2.whitespace-nowrap= student.level.titleize
    %td.p-2{ data: { controller: 'validity' } }
      .flex.justify-center.items-center.gap-1
        = select_tag 'test_result[basics]',
                    options_for_select(0..test.basics, result.basics),
                    class: 'testresult-input', id: "#{form}-basics", form:,
                    data: { action: 'test-result#calculate validity#validate',
                            'test-result-target': 'basics',
                            'validity-target': 'input' }

    - Test::SKILLS.each do |skill|
      = render 'test_results/skill_fields',
              form:, result:, skill:, test:

    %td.p-2
      .flex.justify-center.items-center.gap-1
        = hidden_field_tag 'test_result[total_percent]',
                          result.total_percent || 0,
                          class: 'testresult-input', form:,
                          data: { 'test-result-target': 'totalPercent' }
        %p{ class: 'bg-secondary rounded text-white font-bold p-2',
            data: { 'test-result-target': 'totalPercent' } }
          #{result.total_percent || 0}%

    %td.p-2
      - prev_level = result.prev_level || student.level
      = prev_level.titleize
      = hidden_field_tag 'test_result[prev_level]',
                        prev_level,
                        form:, data: { 'test-result-target': 'prevLevel' }

    %td.p-2
      .flex.flex-col.gap-3
        = select_tag 'test_result[new_level]',
                    options_for_select(lvl_options, rec_lvl),
                    class: 'border-secondary',
                    form:, data: { action: 'test-result#checkRecommendedLevel',
                                    'test-result-target': 'newLevel' }
        = text_area_tag 'test_result[reason]',
                        '',
                        class: 'hidden', data: { 'test-result-target': 'reason' },
                        form:, placeholder: t('.give_reason')

    %td.p-2
      = form_with model: [test, result],
                  data: { action: 'turbo:submit-end->test-result#markDone' },
                  html: { autocomplete: 'off', id: } do |f|
        = f.hidden_field :student_id
        = f.hidden_field :test_id
        = f.submit class: 'btn btn-main'
